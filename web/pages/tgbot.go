package pages

import (
	"GoNote/tgbot"
	"fmt"
	"log"
	"net/http"

	"github.com/gin-gonic/gin"
)

type ReportRequest struct {
	Reason string `json:"reason" binding:"required"`
	EMail  string `json:"email" binding:"required"`
	Text   string `json:"text" binding:"required"`
	Link   string `json:"link" binding:"required"`
}

func TGBotReport(c *gin.Context) {
	var req ReportRequest

	// –ü–∞—Ä—Å–∏–º JSON —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
	if err := c.ShouldBindJSON(&req); err != nil {
		log.Println("Error binding request report:", err)
		c.JSON(http.StatusBadRequest, gin.H{"error": "Missing reason or text"})
		return
	}

	// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
	message := fmt.Sprintf(
		"üì¢ New complaint received!\n\nReason: %s\nText: %s\nLink: %s\nEmail: %s",
		req.Reason,
		req.Text,
		req.Link,
		req.EMail,
	)

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
	tgbot.SendMessageAll(message)

	// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
	c.JSON(http.StatusOK, gin.H{"status": "ok"})
}
